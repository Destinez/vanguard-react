{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport Metadata from './metadata.js';\nimport isPossibleNumber from './isPossibleNumber_.js';\nimport isValidNumber from './validate_.js';\nimport isValidNumberForRegion from './isValidNumberForRegion_.js';\nimport getNumberType from './helpers/getNumberType.js';\nimport formatNumber from './format_.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar PhoneNumber = /*#__PURE__*/function () {\n  function PhoneNumber(countryCallingCode, nationalNumber, metadata) {\n    _classCallCheck(this, PhoneNumber);\n\n    if (!countryCallingCode) {\n      throw new TypeError('`country` or `countryCallingCode` not passed');\n    }\n\n    if (!nationalNumber) {\n      throw new TypeError('`nationalNumber` not passed');\n    }\n\n    if (!metadata) {\n      throw new TypeError('`metadata` not passed');\n    }\n\n    var _metadata = new Metadata(metadata); // If country code is passed then derive `countryCallingCode` from it.\n    // Also store the country code as `.country`.\n\n\n    if (isCountryCode(countryCallingCode)) {\n      this.country = countryCallingCode;\n\n      _metadata.country(countryCallingCode);\n\n      countryCallingCode = _metadata.countryCallingCode();\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (_metadata.isNonGeographicCallingCode(countryCallingCode)) {\n          this.country = '001';\n        }\n      }\n    }\n\n    this.countryCallingCode = countryCallingCode;\n    this.nationalNumber = nationalNumber;\n    this.number = '+' + this.countryCallingCode + this.nationalNumber;\n    this.metadata = metadata;\n  }\n\n  _createClass(PhoneNumber, [{\n    key: \"setExt\",\n    value: function setExt(ext) {\n      this.ext = ext;\n    }\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      return isPossibleNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return isValidNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function isNonGeographic() {\n      var metadata = new Metadata(this.metadata);\n      return metadata.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(phoneNumber) {\n      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;\n    } // // Is just an alias for `this.isValid() && this.country === country`.\n    // // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\n    // isValidForRegion(country) {\n    // \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\n    // }\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return getNumberType(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format, options) {\n      return formatNumber(this, _format, options ? _objectSpread(_objectSpread({}, options), {}, {\n        v2: true\n      }) : {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"formatNational\",\n    value: function formatNational(options) {\n      return this.format('NATIONAL', options);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function formatInternational(options) {\n      return this.format('INTERNATIONAL', options);\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI(options) {\n      return this.format('RFC3966', options);\n    }\n  }]);\n\n  return PhoneNumber;\n}();\n\nexport { PhoneNumber as default };\n\nvar isCountryCode = function isCountryCode(value) {\n  return /^[A-Z]{2}$/.test(value);\n};","map":{"version":3,"sources":["C:/Users/HP/Documents/code/Digital Switch/AAM-Templates/aam-volt/node_modules/libphonenumber-js/es6/PhoneNumber.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","Metadata","isPossibleNumber","isValidNumber","isValidNumberForRegion","getNumberType","formatNumber","USE_NON_GEOGRAPHIC_COUNTRY_CODE","PhoneNumber","countryCallingCode","nationalNumber","metadata","_metadata","isCountryCode","country","isNonGeographicCallingCode","number","setExt","ext","isPossible","v2","isValid","isNonGeographic","isEqual","phoneNumber","getType","format","_format","options","formatNational","formatInternational","getURI","default","test"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport Metadata from './metadata.js';\nimport isPossibleNumber from './isPossibleNumber_.js';\nimport isValidNumber from './validate_.js';\nimport isValidNumberForRegion from './isValidNumberForRegion_.js';\nimport getNumberType from './helpers/getNumberType.js';\nimport formatNumber from './format_.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar PhoneNumber = /*#__PURE__*/function () {\n  function PhoneNumber(countryCallingCode, nationalNumber, metadata) {\n    _classCallCheck(this, PhoneNumber);\n\n    if (!countryCallingCode) {\n      throw new TypeError('`country` or `countryCallingCode` not passed');\n    }\n\n    if (!nationalNumber) {\n      throw new TypeError('`nationalNumber` not passed');\n    }\n\n    if (!metadata) {\n      throw new TypeError('`metadata` not passed');\n    }\n\n    var _metadata = new Metadata(metadata); // If country code is passed then derive `countryCallingCode` from it.\n    // Also store the country code as `.country`.\n\n\n    if (isCountryCode(countryCallingCode)) {\n      this.country = countryCallingCode;\n\n      _metadata.country(countryCallingCode);\n\n      countryCallingCode = _metadata.countryCallingCode();\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (_metadata.isNonGeographicCallingCode(countryCallingCode)) {\n          this.country = '001';\n        }\n      }\n    }\n\n    this.countryCallingCode = countryCallingCode;\n    this.nationalNumber = nationalNumber;\n    this.number = '+' + this.countryCallingCode + this.nationalNumber;\n    this.metadata = metadata;\n  }\n\n  _createClass(PhoneNumber, [{\n    key: \"setExt\",\n    value: function setExt(ext) {\n      this.ext = ext;\n    }\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      return isPossibleNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return isValidNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function isNonGeographic() {\n      var metadata = new Metadata(this.metadata);\n      return metadata.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(phoneNumber) {\n      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;\n    } // // Is just an alias for `this.isValid() && this.country === country`.\n    // // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\n    // isValidForRegion(country) {\n    // \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\n    // }\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return getNumberType(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format, options) {\n      return formatNumber(this, _format, options ? _objectSpread(_objectSpread({}, options), {}, {\n        v2: true\n      }) : {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"formatNational\",\n    value: function formatNational(options) {\n      return this.format('NATIONAL', options);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function formatInternational(options) {\n      return this.format('INTERNATIONAL', options);\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI(options) {\n      return this.format('RFC3966', options);\n    }\n  }]);\n\n  return PhoneNumber;\n}();\n\nexport { PhoneNumber as default };\n\nvar isCountryCode = function isCountryCode(value) {\n  return /^[A-Z]{2}$/.test(value);\n};\n//# sourceMappingURL=PhoneNumber.js.map"]},"metadata":{},"sourceType":"module"}