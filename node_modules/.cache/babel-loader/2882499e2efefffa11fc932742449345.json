{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nvar styles = {\n  \"container\": \"_1Lxpd\",\n  \"dropdown\": \"_30Ipg\",\n  \"dropdown_items_wrapper\": \"_1KMXW\",\n  \"dropdown_items\": \"_2-_Xn\",\n  \"input_wrapper\": \"_3LhE5\",\n  \"country_search\": \"_3_9HH\",\n  \"dropdown_item\": \"_34ETa\",\n  \"dropdown_item_title\": \"_14Kkd\",\n  \"selected_country\": \"_3Dx_t\",\n  \"country_flag\": \"_2vjgV\"\n};\n\nvar CaretDownIcon = function CaretDownIcon(props) {\n  var setStyle = function setStyle() {\n    var style;\n\n    switch (props.point) {\n      case 'up':\n        style = {\n          position: 'absolute',\n          color: '#696969',\n          right: '20px',\n          transition: 'all 0.3s',\n          transform: 'rotate(180deg)',\n          height: '16px'\n        };\n        break;\n\n      case 'down':\n        style = {\n          position: 'absolute',\n          right: '20px',\n          color: '#696969',\n          transition: 'all 0.3s',\n          height: '16px'\n        };\n        break;\n\n      case 'up_white':\n        style = {\n          position: 'absolute',\n          left: '10px',\n          top: '-10px',\n          transform: 'rotate(180deg)',\n          color: '#fff',\n          height: '16px'\n        };\n        break;\n    }\n\n    return style;\n  };\n\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"caret-down\",\n    className: \"svg-inline--fa fa-caret-down fa-w-10\",\n    role: \"img\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 320 512\",\n    height: \"18px\",\n    color: props.color,\n    style: setStyle()\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M31.3 192h257.3c17.8 0 26.7 \\r 21.5 14.1 34.1L174.1 354.8c-7.8 \\r 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 \\r 213.5 13.5 192 31.3 192z\"\n  }));\n};\n\nvar ReactCountryDropdown = function ReactCountryDropdown(props) {\n  var _useState = useState([]),\n      Countries = _useState[0],\n      setCountries = _useState[1];\n\n  var _useState2 = useState([]),\n      CountriesCopy = _useState2[0],\n      setCountriesCopy = _useState2[1];\n\n  var _useState3 = useState(false),\n      open = _useState3[0],\n      setOpen = _useState3[1];\n\n  var _useState4 = useState(null),\n      setSelectedCountry = _useState4[1];\n\n  var _useState5 = useState({\n    alpha2Code: '',\n    alpha3Code: ''\n  }),\n      defaultCountry = _useState5[0],\n      setDefaultCountry = _useState5[1];\n\n  var dropdownRef = useRef(null);\n  useEffect(function () {\n    defaultCountrySetter(props.countryCode ? props.countryCode : 'US');\n    preFetchCountries().then(function (res) {\n      setCountries(res);\n      setCountriesCopy(res);\n      preloadImages().then(function (arr) {\n        arr.forEach(function (pic) {\n          var img = new Image();\n          img.src = pic;\n        });\n      });\n    });\n    document.addEventListener('mousedown', handleClickOutSide);\n  }, []);\n\n  var defaultCountrySetter = function defaultCountrySetter(d) {\n    preFetchCountries().then(function (countries) {\n      var defaultC = countries.filter(function (i) {\n        return i.alpha2Code.toLowerCase() === d.toLowerCase();\n      });\n      setDefaultCountry({\n        alpha2Code: defaultC[0].alpha2Code,\n        alpha3Code: defaultC[0].alpha3Code\n      });\n    });\n  };\n\n  var preFetchCountries = function preFetchCountries() {\n    try {\n      return Promise.resolve(fetch('https://restcountries.eu/rest/v2/all')).then(function (data) {\n        return Promise.resolve(data.json());\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var handleClickOutSide = function handleClickOutSide(e) {\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n      setOpen(false);\n    }\n  };\n\n  var preloadImages = function preloadImages() {\n    try {\n      var mapIconArr = [];\n      Countries.map(function (i) {\n        mapIconArr.push(\"https://restcountries.eu/data/\" + i.alpha3Code + \".svg\");\n      });\n      return Promise.resolve(mapIconArr);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var toggleDropDown = function toggleDropDown() {\n    if (!open) {\n      setCountries(CountriesCopy);\n    }\n\n    setOpen(!open);\n  };\n\n  var handleCountryClick = function handleCountryClick(i) {\n    var result = {\n      name: i.name,\n      code: i.alpha2Code,\n      capital: i.capital,\n      region: i.region,\n      latlng: i.latlng\n    };\n    setDefaultCountry({\n      alpha2Code: i.alpha2Code,\n      alpha3Code: i.alpha3Code\n    });\n    setSelectedCountry(result);\n\n    if (props.onSelect) {\n      props.onSelect(result);\n    }\n\n    toggleDropDown();\n  };\n\n  var handleSearchInput = function handleSearchInput(e) {\n    var input = e.target.value.toLowerCase();\n    var filteredCountries = CountriesCopy.filter(function (i) {\n      return i.name.toLowerCase().includes(input.toLowerCase());\n    });\n    setCountries(filteredCountries);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    ref: dropdownRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dropdown,\n    onClick: toggleDropDown\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.country_flag,\n    src: \"https://restcountries.eu/data/\" + defaultCountry.alpha3Code.toLowerCase() + \".svg\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.selected_country\n  }, defaultCountry.alpha2Code), /*#__PURE__*/React.createElement(CaretDownIcon, {\n    point: open ? 'up' : 'down'\n  })), open && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dropdown_items_wrapper\n  }, /*#__PURE__*/React.createElement(CaretDownIcon, {\n    point: \"up_white\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input_wrapper\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return handleSearchInput(e);\n    },\n    className: styles.country_search,\n    type: \"text\",\n    placeholder: \"search coutries...\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dropdown_items\n  }, Countries.map(function (i, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      onClick: function onClick() {\n        return handleCountryClick(i);\n      },\n      className: styles.dropdown_item\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.country_flag,\n      src: i.flag,\n      alt: \"\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.dropdown_item_title\n    }, \" \", i.name));\n  }))));\n};\n\nexport { ReactCountryDropdown };","map":{"version":3,"sources":["../src/assets/caret-down.jsx","../src/index.js"],"names":["CaretDownIcon","setStyle","props","style","position","color","right","transition","transform","height","left","top","ReactCountryDropdown","Countries","setCountries","useState","CountriesCopy","setCountriesCopy","open","setOpen","setSelectedCountry","defaultCountry","setDefaultCountry","alpha2Code","alpha3Code","dropdownRef","useRef","useEffect","defaultCountrySetter","preFetchCountries","preloadImages","arr","img","document","defaultC","i","d","fetch","data","handleClickOutSide","e","mapIconArr","toggleDropDown","handleCountryClick","result","name","code","capital","region","latlng","handleSearchInput","input","filteredCountries","styles","selected_country","dropdown_items_wrapper","input_wrapper","dropdown_items","dropdown_item","dropdown_item_title"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nexport const CaretDownIcon = (props) => {\r\n  const setStyle = () => {\r\n    let style\r\n    switch (props.point) {\r\n      case 'up':\r\n        style = {\r\n          position: 'absolute',\r\n          color: '#696969',\r\n          right: '20px',\r\n          transition: 'all 0.3s',\r\n          transform: 'rotate(180deg)',\r\n          height: '16px'\r\n        }\r\n        break\r\n\r\n      case 'down':\r\n        style = {\r\n          position: 'absolute',\r\n          right: '20px',\r\n          color: '#696969',\r\n          transition: 'all 0.3s',\r\n          height: '16px'\r\n        }\r\n        break\r\n\r\n      case 'up_white':\r\n        style = {\r\n          position: 'absolute',\r\n          left: '10px',\r\n          top: '-10px',\r\n          transform: 'rotate(180deg)',\r\n          color: '#fff',\r\n          height: '16px'\r\n        }\r\n        break\r\n    }\r\n    return style\r\n  }\r\n  return (\r\n    <svg\r\n      aria-hidden='true'\r\n      focusable='false'\r\n      data-prefix='fas'\r\n      data-icon='caret-down'\r\n      className='svg-inline--fa fa-caret-down fa-w-10'\r\n      role='img'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 320 512'\r\n      height='18px'\r\n      color={props.color}\r\n      style={setStyle()}\r\n    >\r\n      <path\r\n        fill='currentColor'\r\n        d='M31.3 192h257.3c17.8 0 26.7 \r\n            21.5 14.1 34.1L174.1 354.8c-7.8 \r\n            7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 \r\n            213.5 13.5 192 31.3 192z'\r\n      ></path>\r\n    </svg>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport styles from './styles.module.css'\r\nimport { CaretDownIcon } from './assets/caret-down'\r\n\r\nexport const ReactCountryDropdown = (props) => {\r\n  const [Countries, setCountries] = useState([])\r\n  const [CountriesCopy, setCountriesCopy] = useState([])\r\n  const [open, setOpen] = useState(false)\r\n  const [selectedCountry, setSelectedCountry] = useState(null)\r\n  const [defaultCountry, setDefaultCountry] = useState({\r\n    alpha2Code: '',\r\n    alpha3Code: ''\r\n  })\r\n\r\n  const dropdownRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    defaultCountrySetter(props.countryCode ? props.countryCode : 'US')\r\n    preFetchCountries().then((res) => {\r\n      setCountries(res)\r\n      setCountriesCopy(res)\r\n\r\n      preloadImages().then((arr) => {\r\n        arr.forEach((pic) => {\r\n          const img = new Image()\r\n          img.src = pic\r\n        })\r\n      })\r\n    })\r\n\r\n    document.addEventListener('mousedown', handleClickOutSide)\r\n  }, [])\r\n\r\n  const defaultCountrySetter = (d) => {\r\n    preFetchCountries().then((countries) => {\r\n      const defaultC = countries.filter(\r\n        (i) => i.alpha2Code.toLowerCase() === d.toLowerCase()\r\n      )\r\n      setDefaultCountry({\r\n        alpha2Code: defaultC[0].alpha2Code,\r\n        alpha3Code: defaultC[0].alpha3Code\r\n      })\r\n    })\r\n  }\r\n\r\n  const preFetchCountries = async () => {\r\n    const data = await fetch('https://restcountries.eu/rest/v2/all')\r\n    const result = await data.json()\r\n    return result\r\n  }\r\n\r\n  const handleClickOutSide = (e) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n      setOpen(false)\r\n    }\r\n  }\r\n\r\n  const preloadImages = async () => {\r\n    const mapIconArr = []\r\n    Countries.map((i) => {\r\n      mapIconArr.push(`https://restcountries.eu/data/${i.alpha3Code}.svg`)\r\n    })\r\n    return mapIconArr\r\n  }\r\n\r\n  const toggleDropDown = () => {\r\n    /* reset all countries before closing */\r\n    if (!open) {\r\n      setCountries(CountriesCopy)\r\n    }\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handleCountryClick = (i) => {\r\n    const result = {\r\n      name: i.name,\r\n      code: i.alpha2Code,\r\n      capital: i.capital,\r\n      region: i.region,\r\n      latlng: i.latlng\r\n    }\r\n    setDefaultCountry({\r\n      alpha2Code: i.alpha2Code,\r\n      alpha3Code: i.alpha3Code\r\n    })\r\n    /* Send the result as props on select*/\r\n    setSelectedCountry(result)\r\n\r\n    if (props.onSelect) {\r\n      props.onSelect(result)\r\n    }\r\n\r\n    /* Hide the dropdown menu on selecting a country */\r\n    toggleDropDown()\r\n  }\r\n\r\n  const handleSearchInput = (e) => {\r\n    const input = e.target.value.toLowerCase()\r\n    let filteredCountries = CountriesCopy.filter((i) =>\r\n      i.name.toLowerCase().includes(input.toLowerCase())\r\n    )\r\n    setCountries(filteredCountries)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container} ref={dropdownRef}>\r\n      <div className={styles.dropdown} onClick={toggleDropDown}>\r\n        <img\r\n          className={styles.country_flag}\r\n          src={`https://restcountries.eu/data/${defaultCountry.alpha3Code.toLowerCase()}.svg`}\r\n        />\r\n        <span className={styles.selected_country}>\r\n          {defaultCountry.alpha2Code}\r\n        </span>\r\n        <CaretDownIcon point={open ? 'up' : 'down'} />\r\n      </div>\r\n\r\n      {open && (\r\n        <div className={styles.dropdown_items_wrapper}>\r\n          <CaretDownIcon point='up_white' />\r\n          <div className={styles.input_wrapper}>\r\n            <input\r\n              onChange={(e) => handleSearchInput(e)}\r\n              className={styles.country_search}\r\n              type='text'\r\n              placeholder='search coutries...'\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.dropdown_items}>\r\n            {Countries.map((i, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  onClick={() => handleCountryClick(i)}\r\n                  className={styles.dropdown_item}\r\n                >\r\n                  <img className={styles.country_flag} src={i.flag} alt='' />\r\n                  <span className={styles.dropdown_item_title}> {i.name}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}