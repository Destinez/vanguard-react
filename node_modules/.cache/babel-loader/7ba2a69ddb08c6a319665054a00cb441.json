{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\code\\\\Digital Switch\\\\AAM-Templates\\\\aam-volt\\\\src\\\\pages\\\\examples\\\\ResetPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Routes } from \"../../routes\";\nimport setAuthToken from '../validation/authAuthToken';\n\nconst axios = require('axios').default;\n\nexport default (() => {\n  const [verify, setVerify] = useState({\n    status: false,\n    message: \"\",\n    errorClass: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [errorClass, setErrorClass] = useState(\"\");\n  let search = window.location.search;\n  let params = new URLSearchParams(search);\n  let token_temp = params.get('token');\n  let token = {\n    token: token_temp\n  };\n  console.log(token_temp);\n  useEffect(() => {\n    verifyToken(token_temp);\n  }, []);\n\n  let verifyToken = async token => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/verify-reset-password-link`, {\n        headers: {\n          'authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      let res = response.data;\n      console;\n\n      if (res.status === true && res.code === 200) {\n        setVerify({ ...verify,\n          status: true\n        });\n        setErrorClass('text-white bg-success rounded-1 my-2 px-2');\n      } else if (res.status === false && res.code === 423) {\n        setVerify({ ...verify,\n          status: false\n        });\n        setVerify({ ...verify,\n          message: res.message\n        });\n        setVerify({ ...verify,\n          errorClass: 'text-white bg-success rounded-1 my-2 px-2'\n        });\n      } else if (res.status === false && res.code === 403) {\n        setVerify({ ...verify,\n          status: false\n        });\n        setVerify({ ...verify,\n          message: res.message\n        });\n        setVerify({ ...verify,\n          errorClass: 'text-white bg-success rounded-1 my-2 px-2'\n        });\n      } else if (res.status === false && res.code === 422) {\n        if (res.errors.reset_token) {\n          setVerify({ ...verify,\n            message: res.errors.reset_token[0]\n          });\n        }\n\n        setVerify({ ...verify,\n          status: false\n        });\n        setVerify({ ...verify,\n          errorClass: 'text-white bg-success rounded-1 my-2 px-2'\n        });\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    let data = {// amount: amount\n    };\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/get-deposit-method`, data, {\n        headers: {\n          'authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      let res = response.data;\n\n      if (res.status === false && res.code === 422) {\n        setMessage(res.errors.amount[0]);\n        setErrorClass('text-white bg-danger rounded-1 my-2 px-2');\n      } else if (res.status === true && res.code === 200) {\n        setMessage(res.message);\n        setErrorClass('text-white bg-success rounded-1 my-2 px-2');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Link, {\n    as: Link,\n    to: Routes.Signin.path,\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAngleLeft,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), \" Back to sign in\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"d-flex align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Reset password\"), verify.status == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: errorClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 44\n    }\n  }, verify.message), verify.status == true && /*#__PURE__*/React.createElement(Form, {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, \"Your Password\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"confirmPassword\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Reset password\"))))))));\n});","map":{"version":3,"sources":["C:/Users/HP/Documents/code/Digital Switch/AAM-Templates/aam-volt/src/pages/examples/ResetPassword.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faAngleLeft","faEnvelope","faUnlockAlt","Col","Row","Form","Card","Button","Container","InputGroup","Link","Routes","setAuthToken","axios","require","default","verify","setVerify","status","message","errorClass","setMessage","setErrorClass","search","window","location","params","URLSearchParams","token_temp","get","token","console","log","verifyToken","response","process","env","REACT_APP_SERVER_URL","headers","res","data","code","errors","reset_token","err","error","handleSubmit","e","preventDefault","post","amount","Signin","path"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { Routes } from \"../../routes\";\nimport setAuthToken from '../validation/authAuthToken';\nconst axios = require('axios').default;\n\n\nexport default () => {\n  const [verify, setVerify] = useState({\n    status: false,\n    message: \"\",\n    errorClass: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [errorClass, setErrorClass] = useState(\"\");\n\n  let search = window.location.search;\n  let params = new URLSearchParams(search);\n  let token_temp = params.get('token');\n\n  let token = {\n    token: token_temp\n  }\n\n  console.log(token_temp)\n\n  useEffect(() => {\n    verifyToken(token_temp);\n  }, [])\n\n  let verifyToken = async (token) => {\n\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/verify-reset-password-link`, {\n        headers: {\n          'authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      })\n\n      let res = response.data\n      console\n\n      if (res.status === true && res.code === 200) {\n        setVerify({...verify, status: true})\n        setErrorClass('text-white bg-success rounded-1 my-2 px-2')\n      }\n\n      else if (res.status === false && res.code === 423) {\n        setVerify({...verify, status: false})\n        setVerify({...verify, message: res.message})\n        setVerify({...verify, errorClass: 'text-white bg-success rounded-1 my-2 px-2'})\n      }\n\n      else if (res.status === false && res.code === 403) {\n        setVerify({...verify, status: false})\n        setVerify({...verify, message: res.message})\n        setVerify({...verify, errorClass: 'text-white bg-success rounded-1 my-2 px-2'})\n      }\n\n      else if (res.status === false && res.code === 422) {\n        if (res.errors.reset_token) {\n          setVerify({...verify, message: res.errors.reset_token[0]})\n        }\n        setVerify({...verify, status: false})\n        setVerify({...verify, errorClass: 'text-white bg-success rounded-1 my-2 px-2'})\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n\n\n  let handleSubmit = async (e) => {\n\n    e.preventDefault()\n\n    let data = {\n      // amount: amount\n    }\n\n    try {\n        const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/get-deposit-method`, data, {\n            headers: {\n                'authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            }\n        })\n\n        let res = response.data\n\n        if (res.status === false && res.code === 422) {\n            setMessage(res.errors.amount[0])\n            setErrorClass('text-white bg-danger rounded-1 my-2 px-2')\n        }\n        else if (res.status === true && res.code === 200){\n          setMessage(res.message)\n          setErrorClass('text-white bg-success rounded-1 my-2 px-2')\n        }\n    } catch (err) {\n        console.error(err);\n    }\n}\n\n\n  return (\n    <main>\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <p className=\"text-center\">\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\n              </Card.Link>\n            </p>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <h3 className=\"mb-4\">Reset password</h3>\n                {verify.status == false && <div className={ errorClass }>{ verify.message }</div>}\n                {verify.status == true &&\n                  <Form method=\"post\" onSubmit={handleSubmit}>\n                    <Form.Group id=\"password\" className=\"mb-4\">\n                      <Form.Label>Your Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" />\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"confirmPassword\" className=\"mb-4\">\n                      <Form.Label>Confirm Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control required type=\"password\" placeholder=\"Confirm Password\" />\n                      </InputGroup>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                      Reset password\n                    </Button>\n                  </Form>\n                }\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}