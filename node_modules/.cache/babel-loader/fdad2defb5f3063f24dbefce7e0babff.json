{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\code\\\\Digital Switch\\\\AAM-Templates\\\\aam-volt\\\\src\\\\pages\\\\examples\\\\ResetPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Routes } from \"../../routes\";\nimport setAuthToken from '../validation/authAuthToken';\n\nconst axios = require('axios').default;\n\nexport default (() => {\n  const [verify, setVerify] = useState({\n    status: false,\n    message: \"\",\n    errorClass: \"\"\n  });\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errorClass, setErrorClass] = useState(\"\");\n  let search = window.location.search;\n  let params = new URLSearchParams(search);\n  let token_temp = params.get('token');\n  useEffect(() => {\n    verifyToken(token_temp);\n    console.log(verify);\n  }, []);\n\n  let verifyToken = async token_temp => {\n    let token = {\n      reset_token: token_temp\n    };\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify-reset-password-link`, token, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let res = response.data;\n      console.log(res);\n\n      if (res.status === true && res.code === 200) {\n        setVerify({ ...verify,\n          status: true\n        });\n        setErrorClass('text-white bg-success rounded-1 my-2 px-2');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  let handleSubmit = async e => {\n    setMessage(\"\");\n    setErrorClass(\"\");\n    e.preventDefault();\n    let data = {\n      reset_token: token_temp,\n      password: password,\n      password_confirmation: passwordConfirm\n    };\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/reset-password`, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let res = response.data;\n\n      if (res.status === false && res.code === 422) {\n        setErrorClass('text-white bg-danger rounded-1 my-2 px-2');\n        res.errors.password[0] && setMessage(res.errors.password[0]);\n        res.errors.reset_token[0] && setMessage(res.errors.reset_token[0]);\n      } else if (res.status === true && res.code === 200) {\n        setMessage(res.message);\n        setErrorClass('text-white bg-success rounded-1 my-2 px-2');\n      } else if (res.status === false && res.code === 423) {\n        setMessage(res.message);\n        setErrorClass('text-white bg-danger rounded-1 my-2 px-2');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Link, {\n    as: Link,\n    to: Routes.Signin.path,\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAngleLeft,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), \" Back to sign in\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"d-flex align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white shadow-soft border vh-75 rounded border-light p-4 p-lg-5 w-100 fmxw-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Reset password\"), verify.status == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-white bg-danger rounded-1 my-2 px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 44\n    }\n  }, \"Invalid Password Reset Link or Page Expired\"), verify.status == true && /*#__PURE__*/React.createElement(Form, {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }, \"Your Password\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"confirmPassword\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"password\",\n    onChange: e => setPasswordConfirm(e.target.value),\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: errorClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, message), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Reset password\"))))))));\n});","map":{"version":3,"sources":["C:/Users/HP/Documents/code/Digital Switch/AAM-Templates/aam-volt/src/pages/examples/ResetPassword.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faAngleLeft","faEnvelope","faUnlockAlt","Col","Row","Form","Card","Button","Container","InputGroup","Link","Routes","setAuthToken","axios","require","default","verify","setVerify","status","message","errorClass","password","setPassword","passwordConfirm","setPasswordConfirm","setMessage","setErrorClass","search","window","location","params","URLSearchParams","token_temp","get","verifyToken","console","log","token","reset_token","response","post","process","env","REACT_APP_SERVER_URL","headers","res","data","code","err","error","handleSubmit","e","preventDefault","password_confirmation","errors","Signin","path","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { Routes } from \"../../routes\";\nimport setAuthToken from '../validation/authAuthToken';\nconst axios = require('axios').default;\n\n\nexport default () => {\n  const [verify, setVerify] = useState({\n    status: false,\n    message: \"\",\n    errorClass: \"\"\n  });\n  const [password, setPassword] = useState(\"\")\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\")\n  const [message, setMessage] = useState(\"\");\n  const [errorClass, setErrorClass] = useState(\"\");\n\n  let search = window.location.search;\n  let params = new URLSearchParams(search);\n  let token_temp = params.get('token');\n\n\n  useEffect(() => {\n    verifyToken(token_temp);\n\n    console.log(verify)\n  }, [])\n\n  let verifyToken = async (token_temp) => {\n\n    let token = {\n      reset_token: token_temp\n    }\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/verify-reset-password-link`, token, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      let res = response.data\n      console.log(res)\n\n      if (res.status === true && res.code === 200) {\n        setVerify({ ...verify, status: true })\n        setErrorClass('text-white bg-success rounded-1 my-2 px-2')\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n\n\n  let handleSubmit = async (e) => {\n    setMessage(\"\")\n    setErrorClass(\"\")\n\n    e.preventDefault()\n\n    let data = {\n      reset_token: token_temp,\n      password: password,\n      password_confirmation: passwordConfirm\n    }\n    \n    try {\n      const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/api/reset-password`, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      let res = response.data\n\n      if (res.status === false && res.code === 422) {\n\n        setErrorClass('text-white bg-danger rounded-1 my-2 px-2')\n\n        res.errors.password[0] && setMessage(res.errors.password[0])\n        res.errors.reset_token[0] && setMessage(res.errors.reset_token[0])\n\n      }\n\n      else if (res.status === true && res.code === 200) {\n        setMessage(res.message)\n        setErrorClass('text-white bg-success rounded-1 my-2 px-2')\n      }\n\n      else if (res.status === false && res.code === 423) {\n        setMessage(res.message)\n        setErrorClass('text-white bg-danger rounded-1 my-2 px-2')\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n\n  return (\n    <main>\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <p className=\"text-center\">\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\n              </Card.Link>\n            </p>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border vh-75 rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <h3 className=\"mb-4\">Reset password</h3>\n                {verify.status == false && <div className=\"text-white bg-danger rounded-1 my-2 px-2\">Invalid Password Reset Link or Page Expired</div>}\n                {verify.status == true &&\n                  <Form method=\"post\" onSubmit={handleSubmit}>\n                    <Form.Group id=\"password\" className=\"mb-4\">\n                      <Form.Label>Your Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control\n                          required\n                          type=\"password\"\n                          onChange={e => setPassword(e.target.value)}\n                          placeholder=\"Password\"\n                        />\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"confirmPassword\" className=\"mb-4\">\n                      <Form.Label>Confirm Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control\n                          required\n                          type=\"password\"\n                          onChange={e => setPasswordConfirm(e.target.value)}\n                          placeholder=\"Confirm Password\" />\n                      </InputGroup>\n                    </Form.Group>\n                    <div className={errorClass}>{message}</div>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                      Reset password\n                    </Button>\n                  </Form>\n                }\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}