{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { normalizeArguments } from './parsePhoneNumber.js';\nimport PhoneNumberMatcher from './PhoneNumberMatcher.js';\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\n\nexport default function searchNumbers() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  var matcher = new PhoneNumberMatcher(text, options, metadata);\n  return _defineProperty({}, Symbol.iterator, function () {\n    return {\n      next: function next() {\n        if (matcher.hasNext()) {\n          return {\n            done: false,\n            value: matcher.next()\n          };\n        }\n\n        return {\n          done: true\n        };\n      }\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/HP/Documents/code/Digital Switch/AAM-Templates/aam-volt/node_modules/libphonenumber-js/es6/searchNumbers.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","normalizeArguments","PhoneNumberMatcher","searchNumbers","_normalizeArguments","arguments","text","options","metadata","matcher","Symbol","iterator","next","hasNext","done"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,SAASQ,kBAAT,QAAmC,uBAAnC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,MAAIC,mBAAmB,GAAGH,kBAAkB,CAACI,SAAD,CAA5C;AAAA,MACIC,IAAI,GAAGF,mBAAmB,CAACE,IAD/B;AAAA,MAEIC,OAAO,GAAGH,mBAAmB,CAACG,OAFlC;AAAA,MAGIC,QAAQ,GAAGJ,mBAAmB,CAACI,QAHnC;;AAKA,MAAIC,OAAO,GAAG,IAAIP,kBAAJ,CAAuBI,IAAvB,EAA6BC,OAA7B,EAAsCC,QAAtC,CAAd;AACA,SAAOhB,eAAe,CAAC,EAAD,EAAKkB,MAAM,CAACC,QAAZ,EAAsB,YAAY;AACtD,WAAO;AACLC,MAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,YAAIH,OAAO,CAACI,OAAR,EAAJ,EAAuB;AACrB,iBAAO;AACLC,YAAAA,IAAI,EAAE,KADD;AAELnB,YAAAA,KAAK,EAAEc,OAAO,CAACG,IAAR;AAFF,WAAP;AAID;;AAED,eAAO;AACLE,UAAAA,IAAI,EAAE;AADD,SAAP;AAGD;AAZI,KAAP;AAcD,GAfqB,CAAtB;AAgBD","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { normalizeArguments } from './parsePhoneNumber.js';\nimport PhoneNumberMatcher from './PhoneNumberMatcher.js';\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\n\nexport default function searchNumbers() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  var matcher = new PhoneNumberMatcher(text, options, metadata);\n  return _defineProperty({}, Symbol.iterator, function () {\n    return {\n      next: function next() {\n        if (matcher.hasNext()) {\n          return {\n            done: false,\n            value: matcher.next()\n          };\n        }\n\n        return {\n          done: true\n        };\n      }\n    };\n  });\n}\n//# sourceMappingURL=searchNumbers.js.map"]},"metadata":{},"sourceType":"module"}